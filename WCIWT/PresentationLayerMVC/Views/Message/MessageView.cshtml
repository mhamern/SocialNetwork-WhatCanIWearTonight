@model PresentationLayerMVC.Models.Aggregated.MessagesAggregatedViewModel
@{
    ViewBag.Title = "MessagesListView with " + Model.Friend.Username;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{ var logged = User.Identity.Name;}

<h3>
    @Html.ActionLink(
        linkText: Model.Friend.Username,
        actionName: "Index",
        controllerName: "User",
        routeValues: new
        {
            area = "",
            username = Model.Friend.Username
        },
        htmlAttributes: null)
</h3>
<hr />
@if (Model.MessagesListView.Messages.HasNextPage)
{
    <div class="col-md-2">
        @Html.ActionLink(
            linkText: "Show older",
            actionName: "Index",
            controllerName: "Message",
            routeValues: new
            {
                area = "",
                username = Model.Friend.Username,
                page =Model.Page + 1,
            },
            htmlAttributes: new
            {
                @class = "btn btn-info"
            })
    </div>
}
@if (Model.MessagesListView.Messages.HasPreviousPage)
{
    <div class="col-md-2">
        @Html.ActionLink(
            linkText: "Show newer",
            actionName: "Index",
            controllerName: "Message",
            routeValues: new
            {
                area = "",
                username = Model.Friend.Username,
                page = Model.Page - 1,
            },
            htmlAttributes: new
            {
                @class = "btn btn-info"
            })
    </div>
}
<div class="row">
    <div class="col-md-12">
        @foreach (var message in Model.MessagesListView.Messages)
        {
            <div class="row">
                @if (message.UserSender.Username != logged)
                {
                    <div class="col-md-6">
                        <div class="alert alert-info">
                            @Html.DisplayFor(model => message.Text)
                        </div>

                    </div>
                }
                @if (message.UserSender.Username == logged)
                {
                    <div class="col-md-6 col-md-offset-6">
                        <div class="alert alert-warning">
                            @Html.DisplayFor(model => message.Text)
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("SendMessage", "Message", FormMethod.Post))
        {
            @Html.AntiForgeryToken();

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-10">

                    <div class="form-group">
                        @Html.EditorFor(model => model.NewMessageText,
                            new { htmlAttributes = new { @class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.NewMessageText, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.Hidden("username", Model.Friend.Username)
                <div class="col-md-2">

                    <div class="form-group">
                        <input type="submit" value="Send" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>