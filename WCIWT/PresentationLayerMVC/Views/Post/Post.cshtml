@model PresentationLayerMVC.Models.Posts.PostModel
@{
    ViewBag.Title = "Post";
}

@{ 
    bool logged = HttpContext.Current.User.Identity.Name.Length != 0;
}

<!-- TODO MAYBE REMOVE THIS? -->
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-8">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Search user, hashtag" />
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">Search</button>
                            </span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <button class="btn btn-primary" type="button">Add Post</button>
                        <button class="btn btn-info" type="button">Filter</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="well">
            <h3>@Html.DisplayFor(model => model.Post.User.Username)</h3>
            <div class="divider"></div>
            <p>
                @Html.DisplayFor(model => model.Post.Text)
            </p>
            <div class="divider"></div>
            <div class="row">
            @for (var i = 0; i < Model.Images.Count; i++)
            {
                var image = Model.Images[i];
                var base64 = Convert.ToBase64String(image.BinaryImage);
                var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                <div class="col-md-4">
                    <div class="thumbnail">
                        <img src="@imgSrc" alt="Image" class="img-rounded" style="width:100%" />
                        <div class="caption">
                            @if (logged)
                            {
                                var username = HttpContext.Current.User.Identity.Name;
                                @Html.ActionLink(
                                    linkText: $"Like {image.LikesCount}",
                                    actionName: "Like",
                                    controllerName: "Post",
                                    routeValues: new
                                    {
                                        area = "",
                                        username = username,
                                        imageId = image.Id,
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-default"
                                    })
                                @Html.ActionLink(
                                    linkText: $"Dislike {image.DislikesCount}",
                                    actionName: "Dislike",
                                    controllerName: "Post",
                                    routeValues: new
                                    {
                                        area = "",
                                        username = username,
                                        imageId = image.Id,
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-default"
                                    })
                            }
                            else
                            {
                                @Html.ActionLink(
                                   linkText: $"Like {image.LikesCount}",
                                   actionName: "Login",
                                   controllerName: "Account",
                                   routeValues: new
                                   {
                                       area = "",
                                   },
                                   htmlAttributes: new
                                   {
                                       @class = "btn btn-default"
                                   })
                                @Html.ActionLink(
                                   linkText: $"Dislike {image.DislikesCount}",
                                   actionName: "Login",
                                   controllerName: "Account",
                                   routeValues: new
                                   {
                                       area = "",
                                   },
                                   htmlAttributes: new
                                   {
                                       @class = "btn btn-default"
                                   })
                            }
                        </div>
                    </div>
                </div>
            }
            </div>
        </div>
    </div>
</div>

@if (logged)
{
<div class="row">
    <div class="col-md-3">
        <div class="well">
        @using (Html.BeginForm("AddComment", "Post"))
        {
            @Html.AntiForgeryToken()
            @Html.TextAreaFor(model => model.TextComment, new { @class = "form-control" })
            @Html.Hidden("Username", HttpContext.Current.User.Identity.Name)
            @Html.Hidden("PostId", Model.Post.Id) // must be done
            <input type="submit" value="Add Comment" class="btn btn-default" />
        }
        </div>
    </div>
</div>
}

<div class="row">
    <div class="col-md-6 offset-md-3">
        @for (var i = 0; i < Model.Replys.Count; i++)
        {
        <div class="well">
            @{
                var time = Model.Replys[i].Time.ToString();
                var username = Model.Replys[i].User.Username;
                var text = Model.Replys[i].Text;
            }
            <h3>@Html.DisplayFor(model => username)</h3>
            <div class="divider"></div>
            <p>
                @Html.DisplayFor(model => text)
            </p>
            <p>
                Added: @Html.DisplayFor(model => time)
            </p>
        </div>
        }
    </div>
</div>
