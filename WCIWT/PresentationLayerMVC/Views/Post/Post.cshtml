@model PresentationLayerMVC.Models.Posts.PostModel
@{
    ViewBag.Title = "Post";
}

@{
    string loggedUsername = HttpContext.Current.User.Identity.Name;
    bool logged = loggedUsername.Length != 0;
    bool isAdmin = HttpContext.Current.User.IsInRole("admin");
    bool canRemovePost = isAdmin || loggedUsername.Equals(Model.Post.User.Username);
}

<div class="row">
    <div class="col-md-10">
        <div class="well">
            <h3>
                @Html.ActionLink(
                    linkText: Model.Post.User.Username,
                    actionName:"Index",
                    controllerName: "User",
                    routeValues: new
                    {
                        area = "",
                        username = Model.Post.User.Username
                    },
                    htmlAttributes: null)
            </h3>
            <div class="divider"></div>
            <p>
                @{
                    var postText = Model.Post.Text;
                    if (Model.HashtagIndices.Count > 0)
                    {
                        int textIndex = 0;
                        for (var i = 0; i < Model.HashtagIndices.Count; i++)
                        {
                            var tagBegin = Model.HashtagIndices[i].Item1;
                            var tagEnd = Model.HashtagIndices[i].Item2;
                            var innerText = postText.Substring(textIndex, tagBegin - textIndex);
                            @Html.DisplayFor(model => innerText)
                            var hashtag = postText.Substring(tagBegin, tagEnd - tagBegin);
                            @Html.ActionLink(
                                linkText: hashtag,
                                actionName: "PostsWithHashtag",
                                controllerName: "Home",
                                routeValues: new
                                {
                                    area = "",
                                    hashtag = hashtag
                                }, 
                                htmlAttributes: null)
                            textIndex = tagEnd;
                        }
                        var restOfText = postText.Substring(Model.HashtagIndices.Last().Item2);
                        @Html.DisplayFor(model => restOfText)
                    }
                    else
                    {
                        Html.DisplayFor(model => postText);
                    }
                }
            </p>
            <div class="divider"></div>
            <div class="row">
            @for (var i = 0; i < Model.Images.Count; i++)
            {
                var image = Model.Images[i];
                var base64 = Convert.ToBase64String(image.BinaryImage);
                var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                <div class="col-md-4">
                    <div class="thumbnail">
                        <img src="@imgSrc" alt="Image" class="img-rounded" style="width:100%" />
                        <div class="caption">
                            @if (logged)
                            {
                                var username = HttpContext.Current.User.Identity.Name;
                                @Html.ActionLink(
                                    linkText: $"Like {image.LikesCount}",
                                    actionName: "Like",
                                    controllerName: "Post",
                                    routeValues: new
                                    {
                                        area = "",
                                        username = username,
                                        imageId = image.Id,
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-success"
                                    })
                                @Html.ActionLink(
                                    linkText: $"Dislike {image.DislikesCount}",
                                    actionName: "Dislike",
                                    controllerName: "Post",
                                    routeValues: new
                                    {
                                        area = "",
                                        username = username,
                                        imageId = image.Id,
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-danger"
                                    })
                            }
                            else
                            {
                                @Html.ActionLink(
                                   linkText: $"Like {image.LikesCount}",
                                   actionName: "Login",
                                   controllerName: "Account",
                                   routeValues: new
                                   {
                                       area = "",
                                   },
                                   htmlAttributes: new
                                   {
                                       @class = "btn btn-success"
                                   })
                                @Html.ActionLink(
                                   linkText: $"Dislike {image.DislikesCount}",
                                   actionName: "Login",
                                   controllerName: "Account",
                                   routeValues: new
                                   {
                                       area = "",
                                   },
                                   htmlAttributes: new
                                   {
                                       @class = "btn btn-danger"
                                   })
                            }
                        </div>
                    </div>
                </div>
            }
            </div>
            @if (canRemovePost)
            {
                 @Html.ActionLink(
                    linkText: "Remove this post",
                    actionName:"RemovePost",
                    controllerName: "Post",
                    routeValues: new
                    {
                        area = "",
                        postId = Model.Post.Id
                    },
                    htmlAttributes: new
                    {
                        @class = "btn btn-danger"
                    })
            }
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        @for (var i = 0; i < Model.Replys.Count; i++)
        {
            <div class="well">
                @{
                    var id = Model.Replys[i].Id;
                    var time = Model.Replys[i].Time.ToString();
                    var username = Model.Replys[i].User.Username;
                    var text = Model.Replys[i].Text;
                }
                <h3>
                    @Html.ActionLink(
                        linkText: Model.Replys[i].User.Username,
                        actionName:"Index",
                        controllerName: "User",
                        routeValues: new
                        {
                            area = "",
                            username = Model.Replys[i].User.Username
                        },
                        htmlAttributes: null)
                </h3>                <div class="divider"></div>
                <p>
                    @Html.DisplayFor(model => text)
                </p>
                <p>
                    Added: @Html.DisplayFor(model => time)
                </p>
                @if (isAdmin || username.Equals(loggedUsername))
                {
                    @Html.ActionLink(
                        linkText: "Remove this comment",
                        actionName:"RemoveReply",
                        controllerName: "Post",
                        routeValues: new
                        {
                            area = "",
                            replyId = id
                        },
                        htmlAttributes: new
                        {
                            @class = "btn btn-danger"
                        })
                }
            </div>
        }
    </div>
</div>

@if (logged)
{
    <div class="row">
        <div class="col-md-3">
            <div class="well">
                @using (Html.BeginForm("AddReply", "Post"))
                {
                    @Html.AntiForgeryToken()
                    @Html.TextAreaFor(model => model.TextComment, new { @class = "form-control" })
                    @Html.Hidden("Username", HttpContext.Current.User.Identity.Name)
                    @Html.Hidden("PostId", Model.Post.Id) // must be done
                    <input type="submit" value="Add Reply" class="btn btn-success" />
                }
            </div>
        </div>
    </div>
}

