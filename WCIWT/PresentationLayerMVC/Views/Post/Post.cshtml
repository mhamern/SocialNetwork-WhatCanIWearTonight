@model PresentationLayerMVC.Models.Posts.PostModel
@{
    ViewBag.Title = "Post";
}

@{ 
    bool logged = HttpContext.Current.User.Identity.Name.Length != 0;
}

<div class="row">
    <div class="col-md-10">
        <div class="well">
            <h3>@Html.DisplayFor(model => model.Post.User.Username)</h3>
            <div class="divider"></div>
            <p>
                @Html.DisplayFor(model => model.Post.Text)
            </p>
            <div class="divider"></div>
            <div class="row">
            @for (var i = 0; i < Model.Images.Count; i++)
            {
                var image = Model.Images[i];
                var base64 = Convert.ToBase64String(image.BinaryImage);
                var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                <div class="col-md-4">
                    <div class="thumbnail">
                        <img src="@imgSrc" alt="Image" class="img-rounded" style="width:100%" />
                        <div class="caption">
                            @if (logged)
                            {
                                var username = HttpContext.Current.User.Identity.Name;
                                @Html.ActionLink(
                                    linkText: $"Like {image.LikesCount}",
                                    actionName: "Like",
                                    controllerName: "Post",
                                    routeValues: new
                                    {
                                        area = "",
                                        username = username,
                                        imageId = image.Id,
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-success"
                                    })
                                @Html.ActionLink(
                                    linkText: $"Dislike {image.DislikesCount}",
                                    actionName: "Dislike",
                                    controllerName: "Post",
                                    routeValues: new
                                    {
                                        area = "",
                                        username = username,
                                        imageId = image.Id,
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-danger"
                                    })
                            }
                            else
                            {
                                @Html.ActionLink(
                                   linkText: $"Like {image.LikesCount}",
                                   actionName: "Login",
                                   controllerName: "Account",
                                   routeValues: new
                                   {
                                       area = "",
                                   },
                                   htmlAttributes: new
                                   {
                                       @class = "btn btn-success"
                                   })
                                @Html.ActionLink(
                                   linkText: $"Dislike {image.DislikesCount}",
                                   actionName: "Login",
                                   controllerName: "Account",
                                   routeValues: new
                                   {
                                       area = "",
                                   },
                                   htmlAttributes: new
                                   {
                                       @class = "btn btn-danger"
                                   })
                            }
                        </div>
                    </div>
                </div>
            }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        @for (var i = 0; i < Model.Replys.Count; i++)
        {
            <div class="well">
                @{
                    var time = Model.Replys[i].Time.ToString();
                    var username = Model.Replys[i].User.Username;
                    var text = Model.Replys[i].Text;
                }
                <h3>@Html.DisplayFor(model => username)</h3>
                <div class="divider"></div>
                <p>
                    @Html.DisplayFor(model => text)
                </p>
                <p>
                    Added: @Html.DisplayFor(model => time)
                </p>
            </div>
        }
    </div>
</div>

@if (logged)
{
    <div class="row">
        <div class="col-md-3">
            <div class="well">
                @using (Html.BeginForm("AddComment", "Post"))
                {
                    @Html.AntiForgeryToken()
                    @Html.TextAreaFor(model => model.TextComment, new { @class = "form-control" })
                    @Html.Hidden("Username", HttpContext.Current.User.Identity.Name)
                    @Html.Hidden("PostId", Model.Post.Id) // must be done
                    <input type="submit" value="Add Comment" class="btn btn-success" />
                }
            </div>
        </div>
    </div>
}

