@using X.PagedList.Mvc
@using System.Web.Mvc.Html
@model PresentationLayerMVC.Models.Aggregated.HomePageAggregatedViewModel
@{
    ViewBag.Title = "Home";
}


@{
    bool logged = HttpContext.Current.User.Identity.Name.Length != 0;
}
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-8">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Search user, hashtag" />
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">Search</button>
                            </span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        @if (logged) // TODO: Add ActionLink to create new post
                        {
                            <button class="btn btn-primary" type="button">Add Post</button>
                        }
                        <button class="btn btn-info" type="button">Filter</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    @for (var i = 0; i < Model.PostListViewModel.Posts.Count; i++)
    {
        <div class="col-md-8">
            <div class="well">
                <h3>
                    @Html.ActionLink(
                        linkText: Model.PostListViewModel.Posts[i].User.Username,
                        actionName:"Index",
                        controllerName: "User",
                        routeValues: new
                        {
                            area = "",
                            username = Model.PostListViewModel.Posts[i].User.Username
                        },
                        htmlAttributes: null)
                </h3>
                <div class="divider"></div>
                <p>
                    @Html.DisplayFor(model => model.PostListViewModel.Posts[i].Text)
                </p>
                @if (Model.PostListViewModel.ImagesForPosts[i].Count > 0)
                {
                    <div class="row">
                        @for (var j = 0; j < Model.PostListViewModel.ImagesForPosts[i].Count; j++)
                        {
                            var image = Model.PostListViewModel.ImagesForPosts[i][j];
                            var base64 = Convert.ToBase64String(image.BinaryImage);
                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                            <div class="col-md-4">
                                <div class="thumbnail">
                                    <img src="@imgSrc" alt="Image" class="img-rounded" style="width:100%" />
                                    <div class="caption">
                                        @if (logged)
                                        {
                                            <button class="btn btn-default" type="button">Like (@image.LikesCount)</button>
                                            <button class="btn btn-default" type="button">Dislike (@image.DislikesCount)</button>
                                        }
                                        else
                                        {
                                            @Html.ActionLink($"Like ({image.LikesCount})", "Login", "Account", new { @class = "btn btn-default" })
                                            @Html.ActionLink($"Dislike ({image.DislikesCount})", "Login", "Account", new { @class = "btn btn-default" })
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                <p>
                    Added: @Html.DisplayFor(model => model.PostListViewModel.Posts[i].Time)
                </p>
                @Html.ActionLink("Show comments", "posts/" + Model.PostListViewModel.Posts[i].Id, null, new { @class = "btn btn-default" })
            </div>
        </div>
    }
    @if (logged)
    {
        <div class="col-md-4">
            @if (Model.FriendRequestListViewModel.FriendRequests != null
                    && Model.FriendRequestListViewModel.FriendRequests.Count != 0)
            {
                <div class="panel panel-default">
                    <div class="panel-heading>">
                        <h4 class="panel-title">Friendship Requests</h4>
                    </div>
                    <div class="panel-body">
                        <div class="list-group">
                            @for (var i = 0; i < Model.FriendRequestListViewModel.FriendRequests.Count; i++)
                            {
                                <a href="#" class="list-group-item">
                                    @Html.DisplayFor(model => model.FriendRequestListViewModel.FriendRequests[i].Applicant.Username)
                                </a>
                                <button class="btn btn-success">
                                    <div class="glyphicon glyphicon-ok"></div>
                                </button>
                                <button class="btn btn-danger">
                                    <div class="glyphicon glyphicon-remove"></div>
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
            @if (Model.FriendListViewModel.Friends != null
            && Model.FriendListViewModel.Friends.Count != 0)
            {
                <div class="panel panel-default">
                    <div class="panel-heading>">
                        <h4 class="panel-title">Contact List</h4>
                    </div>
                    <div class="panel-body">
                        <div class="list-group">
                            @for (var i = 0; i < Model.FriendListViewModel.Friends.Count; i++)
                            {
                                <a href="#" class="list-group-item">
                                    @Html.DisplayFor(model => model.FriendListViewModel.Friends[i].Username)
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

