@using X.PagedList.Mvc
@using System.Web.Mvc.Html
@model PresentationLayerMVC.Models.Aggregated.HomePageAggregatedViewModel
@{
    ViewBag.Title = "Home";
}


@{
    string loggedUsername = HttpContext.Current.User.Identity.Name;
    bool logged = HttpContext.Current.User.Identity.Name.Length != 0;
    bool isAdmin = HttpContext.Current.User.IsInRole("admin");
}
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-8">
                        <div class="input-group">
                            @using (Html.BeginForm("search", "Home", FormMethod.Get))
                            {
                            <span class="input-group-btn">
                                <input type="text" class="form-control" placeholder="Search user, #hashtag" name="searchKey" id="searchKey" />
                                <input type="submit" class="btn btn-default" value="Search" />
                            </span>
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        @if (logged)
                        {
                            @Html.ActionLink(
                                linkText: "Add Post",
                                actionName: "NewPost",
                                controllerName: "Post",
                                routeValues: new
                                {
                                    area = "",
                                },
                                htmlAttributes: new
                                {
                                    @class = "btn btn-primary"
                                })
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="col-md-8">
            @for (var i = 0; i < Model.PostListViewModel.Posts.Count; i++)
            {
                <div class="row">
                    <div class="well">
                        <h3>
                            @Html.ActionLink(
                                linkText: Model.PostListViewModel.Posts[i].User.Username,
                                actionName: "Index",
                                controllerName: "User",
                                routeValues: new
                                {
                                    area = "",
                                    username = Model.PostListViewModel.Posts[i].User.Username
                                },
                                htmlAttributes: null)
                        </h3>
                        <div class="divider"></div>
                        <p>
                            @{
                                var postText = Model.PostListViewModel.Posts[i].Text;
                                var hashtagIndices = Model.PostListViewModel.HashtagIndices[i];
                                if (hashtagIndices.Count > 0)
                                {
                                    int textIndex = 0;
                                    for (var j = 0; j < hashtagIndices.Count; j++)
                                    {
                                        var tagBegin = hashtagIndices[j].Item1;
                                        var tagEnd = hashtagIndices[j].Item2;
                                        var innerText = postText.Substring(textIndex, tagBegin - textIndex);
                                        @Html.DisplayFor(model => innerText)
                                        var hashtag = postText.Substring(tagBegin, tagEnd - tagBegin);
                                        @Html.ActionLink(
                                            linkText: hashtag,
                                            actionName: "PostsWithHashtag",
                                            controllerName: "Home",
                                            routeValues: new
                                            {
                                                area = "",
                                                hashtag = hashtag
                                            },
                                            htmlAttributes: null)
                                        textIndex = tagEnd;
                                    }
                                    var restOfText = postText.Substring(hashtagIndices.Last().Item2);
                                    @Html.DisplayFor(model => restOfText)
                                }
                                else
                                {
                                    Html.DisplayFor(model => postText);
                                }
                            }
                        </p>
                        @if (Model.PostListViewModel.ImagesForPosts[i].Count > 0)
                        {
                            <div class="row">
                                @for (var j = 0; j < Model.PostListViewModel.ImagesForPosts[i].Count; j++)
                                {
                                    var image = Model.PostListViewModel.ImagesForPosts[i][j];
                                    var base64 = Convert.ToBase64String(image.BinaryImage);
                                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                    <div class="col-md-4">
                                        <div class="thumbnail">
                                            <img src="@imgSrc" alt="Image" class="img-rounded" style="width: 100%" />
                                            <div class="caption">
                                                @if (logged)
                                                {
                                                    var username = HttpContext.Current.User.Identity.Name;
                                                    @Html.ActionLink(
                                                        linkText: $"Like {image.LikesCount}",
                                                        actionName: "Like",
                                                        controllerName: "Post",
                                                        routeValues: new
                                                        {
                                                            area = "",
                                                            username = username,
                                                            imageId = image.Id,
                                                        },
                                                        htmlAttributes: new
                                                        {
                                                            @class = "btn btn-success"
                                                        })
                                                    @Html.ActionLink(
                                                        linkText: $"Dislike {image.DislikesCount}",
                                                        actionName: "Dislike",
                                                        controllerName: "Post",
                                                        routeValues: new
                                                        {
                                                            area = "",
                                                            username = username,
                                                            imageId = image.Id,
                                                        },
                                                        htmlAttributes: new
                                                        {
                                                            @class = "btn btn-danger"
                                                        })
                                                }
                                                else
                                                {
                                                    @Html.ActionLink(
                                                        linkText: $"Like {image.LikesCount}",
                                                        actionName: "Login",
                                                        controllerName: "Account",
                                                        routeValues: new
                                                        {
                                                            area = "",
                                                        },
                                                        htmlAttributes: new
                                                        {
                                                            @class = "btn btn-success"
                                                        })
                                                    @Html.ActionLink(
                                                        linkText: $"Dislike {image.DislikesCount}",
                                                        actionName: "Login",
                                                        controllerName: "Account",
                                                        routeValues: new
                                                        {
                                                            area = "",
                                                        },
                                                        htmlAttributes: new
                                                        {
                                                            @class = "btn btn-danger"
                                                        })
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        @if (Model.PostListViewModel.Posts[i].Visibility == BusinessLayer.DataTransferObjects.PostVisibility.FriendsOnly)
                        {
                            <p>Private post</p>
                        }
                        else
                        {
                            <p>Public post</p>
                        }
                        @if (Model.PostListViewModel.Posts[i].HasAgeRestriction)
                        {
                            <p>
                                Age restriction from: @Html.DisplayFor(model => model.PostListViewModel.Posts[i].AgeRestrictionFrom) year(s) to: @Html.DisplayFor(model => model.PostListViewModel.Posts[i].AgeRestrictionTo) year(s)
                            </p>
                        }
                        @if (Model.PostListViewModel.Posts[i].GenderRestriction != BusinessLayer.DataTransferObjects.Gender.NoInformation)
                        {
                            <p>
                                Gender restriction: @Html.DisplayFor(model => model.PostListViewModel.Posts[i].GenderRestriction) only
                            </p>
                        }
                        <p>
                            Added: @Html.DisplayFor(model => model.PostListViewModel.Posts[i].Time)
                        </p>
                        @Html.ActionLink(
                            linkText: $"Show comments",
                            actionName: "Index",
                            controllerName: "Post",
                            routeValues: new
                            {
                                area = "",
                                postId = Model.PostListViewModel.Posts[i].Id
                            },
                            htmlAttributes: new
                            {
                                @class = "btn btn-info"
                            })
                        @if (isAdmin || loggedUsername.Equals(Model.PostListViewModel.Posts[i].User.Username))
                        {
                            @Html.ActionLink(
                               linkText: "Remove this post",
                               actionName: "RemovePost",
                               controllerName: "Post",
                               routeValues: new
                               {
                                   area = "",
                                   postId = Model.PostListViewModel.Posts[i].Id
                               },
                               htmlAttributes: new
                               {
                                   @class = "btn btn-danger"
                               })
                        }
                    </div>
                </div>
            }
                <div class="row">
                    @if (Model.PostListViewModel.Posts.HasPreviousPage)
                    {
                        if (Model.Hashtag != null)
                        {
                            <div class="col-md-2">
                                @Html.ActionLink(
                                    linkText: "Go Back",
                                    actionName: "PostsWithHashtag",
                                    controllerName: "Home",
                                    routeValues: new
                                    {
                                        area = "",
                                        page = Model.Page - 1,
                                        hashtag = Model.Hashtag
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-info"
                                    })
                            </div>
                        }
                        else
                        {
                            <div class="col-md-2">
                                @Html.ActionLink(
                                    linkText: "Go Back",
                                    actionName: "Index",
                                    controllerName: "Home",
                                    routeValues: new
                                    {
                                        area = "",
                                        page = Model.Page - 1,
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-info"
                                    })
                            </div>
                        }
                        
                    }
                    @if (Model.PostListViewModel.Posts.HasNextPage)
                    {
                        if (Model.Hashtag != null)
                        {
                            <div class="col-md-2">
                                @Html.ActionLink(
                                    linkText: "Load More",
                                    actionName: "PostsWithHashtag",
                                    controllerName: "Home",
                                    routeValues: new
                                    {
                                        area = "",
                                        page = Model.Page + 1,
                                        hashtag = Model.Hashtag
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-info"
                                    })
                            </div>
                        }
                        else
                        {
                            <div class="col-md-2">
                                @Html.ActionLink(
                                    linkText: "Load More",
                                    actionName: "Index",
                                    controllerName: "Home",
                                    routeValues: new
                                    {
                                        area = "",
                                        page = Model.Page + 1,
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-info"
                                    })
                            </div>
                        }
                    }

                </div>
        </div>
        <div class="col-md-4">
            @if (logged)
            {
                if (Model.FriendRequestListViewModel.FriendRequests != null
                     && Model.FriendRequestListViewModel.FriendRequests.Count != 0)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading>">
                            <h4 class="panel-title">Friendship Requests</h4>
                        </div>
                        <div class="panel-body">
                            <div class="list-group">
                                @foreach (var friendR in Model.FriendRequestListViewModel.FriendRequests)
                                {
                                    <div class="row">
                                        <div class="col-md-6">
                                            @Html.ActionLink(
                                                linkText: friendR.Applicant.Username,
                                                actionName: "Index",
                                                controllerName: "User",
                                                routeValues: new
                                                {
                                                    area = "",
                                                    username = friendR.Applicant.Username,
                                            },
                                                htmlAttributes: null)
                                        </div>
                                        <div class="col-md-2">
                                            @using (Html.BeginForm("ConfirmFriend", "User", new {username = friendR.Applicant.Username,}, FormMethod.Post,
                                                new
                                                {
                                                    @id = "confirmFriendRequest=" + friendR.Applicant.Username,
                                                }))
                                            {
                                                <a class="btn btn-success"
                                                   href="javascript:document.getElementById('confirmFriendRequest=@friendR.Applicant.Username').submit()">
                                                    <div class="glyphicon glyphicon-ok"></div>
                                                </a>
                                            }
                                        </div>
                                        <div class="col-md-2">
                                            @using (Html.BeginForm("DeclineFriend", "User", new {username = friendR.Applicant.Username,}, FormMethod.Post,
                                                new
                                                {
                                                    @id = "declineFriendRequest="+ friendR.Applicant.Username,
                                                }
                                                ))
                                            {
                                                <a class="btn btn-danger"
                                                   href="javascript:document.getElementById('declineFriendRequest=@friendR.Applicant.Username').submit()">
                                                    <div class="glyphicon glyphicon-remove"></div>
                                                </a>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
                if (Model.FriendListViewModel.Friends != null
                     && Model.FriendListViewModel.Friends.Count != 0)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading>">
                            <h4 class="panel-title">Contact List</h4>
                        </div>
                        <div class="panel-body">
                            <div class="list-group">
                                @foreach (var friend in Model.FriendListViewModel.Friends)
                                {
                                    <div class="row">
                                        <div class="col-md-6">
                                            @Html.ActionLink(
                                                linkText: friend.Username,
                                                actionName: "Index",
                                                controllerName: "User",
                                                routeValues: new
                                                {
                                                    area = "",
                                                    username = friend.Username
                                                },
                                                htmlAttributes: null)
                                        </div>
                                        <div class="col-md-2">
                                            @Html.ActionLink(
                                                linkText: "Send Message",
                                                actionName: "Index",
                                                controllerName: "Message",
                                                routeValues: new
                                                {
                                                    area = "",
                                                    username = friend.Username,
                                                },
                                                htmlAttributes: new
                                                {
                                                    @class = "btn btn-info"
                                                })
                                        </div>
                                    </div>
                                    <br/>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
           
    </div>
</div>

