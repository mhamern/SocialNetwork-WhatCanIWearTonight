@using PresentationLayerMVC.Models.UserProfile
@model PresentationLayerMVC.Models.Aggregated.UserProfileAggregatedViewModel
@{
    ViewBag.Title = Model.User.Username + "'s Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
    bool logged = HttpContext.Current.User.Identity.Name.Length != 0;
}

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">@Html.DisplayFor(model => model.User.Username)</h3>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="panel-body">
                        <div class="col-md-8">
                            <ul>
                                <li>
                                    @Html.DisplayFor(model => model.User.Gender)
                                </li>
                                <li>
                                    @Html.DisplayFor(model => model.User.Email)
                                </li>
                                <li>
                                    @Html.DisplayFor(model => model.User.Birthdate)
                                </li>
                            </ul>
                        </div>
                        <div class="col-md-2 col-md-offset-2">
                            @if (Model.User.Username != HttpContext.Current.User.Identity?.Name)
                            {
                                if (!Model.IsFriend && !Model.HasPendingFriendRequest && logged)
                                {
                                    <div class="row">
                                        @using (Html.BeginForm("AddFriend", "User", FormMethod.Post, new
                                        {
                                            username = Model.User.Username,
                                            @id = "friendRequest",
                                        }))
                                        {
                                            <a class="btn btn-success"
                                               href="javascript:document.getElementById('friendRequest').submit()">
                                                <span>Send Friend Request</span>
                                            </a>
                                        }
                                    </div>
                                }
                                if (Model.IsFriend && logged)
                                {
                                    <div class="row">
                                        @using (Html.BeginForm("RemoveFriend", "User", FormMethod.Post, new
                                        {
                                            username = Model.User.Username,
                                            @id = "friendRemove",
                                        }))
                                        {
                                            <a class="btn btn-danger"
                                               href="javascript:document.getElementById('friendRemove').submit()">
                                                <span>Remove Friend</span>
                                            </a>
                                        }
                                    </div>
                                    <div class="row">
                                        @Html.ActionLink(
                                            linkText: "Send Message",
                                            actionName: "Index",
                                            controllerName: "Message",
                                            routeValues: new
                                            {
                                                area = "",
                                                username = Model.User.Username,
                                            },
                                            htmlAttributes: new
                                            {
                                                @class = "btn btn-info"
                                            })
                                    </div>
                                }
                            }
                            <div class="row">
                                <input type="button" class="btn btn-info" value="Show Friends" onclick="location.href = '@Url.Action(
                                                                                                                         actionName: "DisplayFriends",
                                                                                                                         controllerName: "User",
                                                                                                                         routeValues: new
                                                                                                                         {
                                                                                                                             area = "",
                                                                                                                             username = Model.User.Username
                                                                                                                         })'" />
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="row">
    @for (var i = 0; i < Model.PostListViewModel.Posts.Count; i++)
    {
        <div class="col-md-12">
            <div class="well">
                <h3>
                    @Html.ActionLink(
                        linkText: Model.PostListViewModel.Posts[i].User.Username,
                        actionName:"Index",
                        controllerName: "User",
                        routeValues: new
                        {
                            area = "",
                            username = Model.PostListViewModel.Posts[i].User.Username
                        },
                        htmlAttributes: null)
                </h3>
                <div class="divider"></div>
                <p>
                @{
                    var postText = Model.PostListViewModel.Posts[i].Text;
                    var hashtagIndices = Model.PostListViewModel.HashtagIndices[i];
                    if (hashtagIndices.Count > 0)
                    {
                        int textIndex = 0;
                        for (var j = 0; j < hashtagIndices.Count; j++)
                        {
                            var tagBegin = hashtagIndices[j].Item1;
                            var tagEnd = hashtagIndices[j].Item2;
                            var innerText = postText.Substring(textIndex, tagBegin - textIndex);
                            @Html.DisplayFor(model => innerText)
                            var hashtag = postText.Substring(tagBegin, tagEnd - tagBegin);
                            @Html.ActionLink(
                                linkText: hashtag,
                                actionName: "PostsWithHashtag",
                                controllerName: "Home",
                                routeValues: new
                                {
                                    area = "",
                                    hashtag = hashtag
                                },
                                htmlAttributes: null)
                            textIndex = tagEnd;
                        }
                        var restOfText = postText.Substring(hashtagIndices.Last().Item2);
                        @Html.DisplayFor(model => restOfText)
                    }
                    else
                    {
                        Html.DisplayFor(model => postText);
                    }
                }
                </p>
                @if (Model.PostListViewModel.ImagesForPosts[i].Count > 0)
                {
                    <div class="row">
                        @for (var j = 0; j < Model.PostListViewModel.ImagesForPosts[i].Count; j++)
                        {
                            var image = Model.PostListViewModel.ImagesForPosts[i][j];
                            var base64 = Convert.ToBase64String(image.BinaryImage);
                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                            <div class="col-md-4">
                                <div class="thumbnail">
                                    <img src="@imgSrc" alt="Image" class="img-rounded" style="width:100%" />
                                    <div class="caption">
                                        @if (logged)
                                        {
                                            var username = HttpContext.Current.User.Identity.Name;
                                            @Html.ActionLink(
                                                linkText: $"Like {image.LikesCount}",
                                                actionName: "Like",
                                                controllerName: "Post",
                                                routeValues: new
                                                {
                                                    area = "",
                                                    username = username,
                                                    imageId = image.Id,
                                                },
                                                htmlAttributes: new
                                                {
                                                    @class = "btn btn-success"
                                                })
                                            @Html.ActionLink(
                                                linkText: $"Dislike {image.DislikesCount}",
                                                actionName: "Dislike",
                                                controllerName: "Post",
                                                routeValues: new
                                                {
                                                    area = "",
                                                    username = username,
                                                    imageId = image.Id,
                                                },
                                                htmlAttributes: new
                                                {
                                                    @class = "btn btn-danger"
                                                })
                                        }
                                        else
                                        {
                                            @Html.ActionLink(
                                               linkText: $"Like {image.LikesCount}",
                                               actionName: "Login",
                                               controllerName: "Account",
                                               routeValues: new
                                               {
                                                   area = "",
                                               },
                                               htmlAttributes: new
                                               {
                                                   @class = "btn btn-success"
                                               })
                                            @Html.ActionLink(
                                               linkText: $"Dislike {image.DislikesCount}",
                                               actionName: "Login",
                                               controllerName: "Account",
                                               routeValues: new
                                               {
                                                   area = "",
                                               },
                                               htmlAttributes: new
                                               {
                                                   @class = "btn btn-danger"
                                               })
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                <p>
                    Added: @Html.DisplayFor(model => model.PostListViewModel.Posts[i].Time)
                </p>
                @Html.ActionLink(
                    linkText: $"Show comments",
                    actionName: "Index",
                    controllerName: "Post",
                    routeValues: new
                    {
                        area = "",
                        postId = Model.PostListViewModel.Posts[i].Id
                    },
                    htmlAttributes: new
                    {
                        @class = "btn btn-info"
                    })
            </div>
        </div>
    }
</div>